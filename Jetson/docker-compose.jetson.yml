version: '3.8'

services:
  ai-validation-jetson:
    build:
      context: .
      dockerfile: Dockerfile.jetson
    image: ai-model-validation:jetson-orin-nano
    container_name: ai-validation-jetson
    
    # Runtime configuration for GPU access
    runtime: nvidia
    
    # Device access for cameras and hardware acceleration
    devices:
      - /dev/video0:/dev/video0  # USB camera
      - /dev/video1:/dev/video1  # CSI camera (if available)
      - /dev/nvhost-ctrl:/dev/nvhost-ctrl
      - /dev/nvhost-ctrl-gpu:/dev/nvhost-ctrl-gpu
      - /dev/nvhost-prof-gpu:/dev/nvhost-prof-gpu
      - /dev/nvmap:/dev/nvmap
      - /dev/nvhost-gpu:/dev/nvhost-gpu
      - /dev/nvhost-as-gpu:/dev/nvhost-as-gpu
    
    # Environment variables
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - JETSON_CLOCKS=1
      - CUDA_VISIBLE_DEVICES=0
      - TZ=UTC
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - ENABLE_MDNS=true
      - ENABLE_GPU_MONITORING=true
    
    # Port mappings
    ports:
      - "8000:8000"     # FastAPI server
      - "5353:5353/udp" # mDNS for service discovery
    
    # Volumes for persistent data
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./outputs:/app/outputs
      - /tmp/argus_socket:/tmp/argus_socket  # For CSI camera access
    
    # Network configuration
    network_mode: host  # Use host network for better performance and mDNS
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    
    # Restart policy
    restart: unless-stopped
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Additional capabilities for hardware access
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    
    # Security options
    security_opt:
      - seccomp:unconfined
    
    # Command override for development
    # command: ["python3", "src/jetson/jetson_api.py"]

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: ai-validation-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: ai-validation-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  prometheus_data:
  grafana_data:

# Network configuration (if not using host mode)
# networks:
#   ai-validation-network:
#     driver: bridge
#     ipam:
#       config:
#         - subnet: 172.20.0.0/16